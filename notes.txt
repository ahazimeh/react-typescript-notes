----------------------
interface ChildProps {
    color: string;
    onClick: () => void;
}

export const Child = (props: ChildProps) => {
    return <div>Hi there!</div>;
}
export const Child = ({color, onClick}: ChildProps) => {
    return <div>Hi there!</div>;
}

video 8 minute 2(what is this image about?)

export const ChildAsFC: React.FC<ChildProps> = ({ color, onClick }) => {
  return <div>{color}</div>;
};
----------------------
state
const [guests, setGuests] = useState<string[]>([]);
----------------------
const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    console.log(event);
  };
  <div draggable onDragStart={onDragStart}>
        Drag Me!
      </div>

  min: 2:50 composition event (autocomplete on mobile devices)

----------------------
class based component
----------------------
// refs
const inputRef = useRef<HTMLInputElement>(null);


npm i --save-exact @types/react-redux@7.1.15 axios@0.21.1 react-redux@7.2.2 redux@4.0.5 redux-thunk@2.3.0

common module system:
AMD commond js es modules

npm i --save-exact webpack@5.11.1 webpack-cli@4.3.0
"scripts": {
    "build": "webpack --mode=development"
  },
  npm run build

webpack usually throws an error if it finds an import that isn't installed locally
NpmInstallWebpackPlugin can change this behaviour
rather than throwing an error it will install this module from npm into your machine or api server

webpack can't run properly in the browser
to solve this we will throw away babel and webpack and use esbuild that replaces babel and webpack

npm i --save-exact esbuild-wasm@0.8.27

npm view react dist.tarball
this is going to print out a link that we can navigate to to download an archive that contains all the source code for react

unpkg website

indexedDb
npm i localforage

import react from "react-select"?


iframe:
window.b=2
inside the iframe parent.b

to access the iframe window from the parent
document.querySelector('iframe').contentWindow.b

<iframe src="/test.html" sandbox="allow-same-origin" /> or remove sandbox property to inable communication between the parent and iframe
and also to have communication between parent and child you should have same domain, same port, and same protocol(http, https)


for communication between iframe and parent
parent: window.addEventListener('message1',(event => console.log(event), false)
child: parent.postMessage('asdsad','*');

iframe.current.srcdoc = html //to set the content of the iframe


open source browser-based editors:
code mirror, ace editor, monaco editor(video 120)


npm i --save-exact @monaco-editor/react@3.7.5
this editor contains 3 versions, diff editor is used whenever you want to compare the difference between 2 files
controlled editor is referring for controlled component in the world of react
//install monaco package seperately to be ablt to make use of monaco types
npm i prettier @types/prettier